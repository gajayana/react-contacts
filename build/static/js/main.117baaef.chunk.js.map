{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Contact","str","indexOf","replace","profileImageStyle","backgroundImage","this","handleImage","props","item","photo","react_default","a","createElement","className","style","firstName","lastName","age","onClick","toggle_update","bind","type","remove","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","id","first_name","last_name","disableButton","assertThisInitialized","handleChange","res","length","is_processing","event","name","target","value","trim","parseInt","setState","defineProperty","ages","toConsumableArray","Array","map","v","i","form_title","disabled","maxLength","onChange","num","key","handler","toggle","App","_this2","contacts","is_loading","is_saving","show_create_form","show_update_form","update_form_item","url","handleRemove","toggleForm","toggleUpdateForm","handleSave","handleUpdate","items","filter","ob","fetch","method","headers","Content-Type","then","json","result","console","log","catch","error","data","_this3","args","body","JSON","stringify","_this4","index","findIndex","_this5","App_Contact","App_Form","is_updating","_this6","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.117baaef.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Contact extends Component {\n\n  handleImage(str) {\n    return (str.indexOf('http://') === 0 || str.indexOf('https://') === 0) \n              ? \n              str.replace('http://', 'https://') \n              : \n              'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg';\n  }\n\n  render() {\n    const profileImageStyle = {\n      backgroundImage : 'url(\"' + this.handleImage(this.props.item.photo) + '\")'\n    };\n  \n    return(\n      <div className=\"pa-1\">\n        <div className=\"App--profile-image\" style={profileImageStyle}></div>\n        <div className=\"text-center\">\n          <div>{this.props.item.firstName} {this.props.item.lastName}</div>\n          <div><small>{this.props.item.age} years of age</small></div>\n        </div>\n        <div>\n          <button onClick={this.props.toggle_update.bind(this, this.props.item)} type=\"button\">Update</button>\n          <button onClick={this.props.remove.bind(this, this.props.item)} type=\"button\">Remove</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Form extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      first_name: '',\n      last_name: '',\n      age: 1,\n      photo: '',\n    }\n    \n    this.disableButton = this.disableButton.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  disableButton() {\n    let res = false;\n    if (!this.state.first_name || this.state.first_name.length < 3) res = true;\n    if (!this.state.last_name || this.state.last_name.length < 3) res = true;\n    if (this.state.photo.indexOf('https://') !== 0) res = true;\n    if (this.props.is_processing) res = true;\n    return res;\n  }\n\n  handleChange(event) {\n    const name = event.target.name;\n    let value = event.target.value.trim();\n\n    // make sure age value is a number\n    if (name === 'age') value = parseInt(value, 10);\n\n    // make sure photo value starts https://\n    if (name === 'photo') value = value.replace('http://', 'https://');\n\n    this.setState({\n      [name] : value\n    });\n  }\n\n  render() {\n    const ages = [...Array(200)].map((v, i) => i + 1);\n\n    return (\n      <div className=\"App--modal\">\n        <form className=\"App--form pa-1\">\n          <h1>{ this.props.form_title }</h1>\n          <div className=\"mb-1\">\n            <label className=\"App--form-label\">First Name</label>\n            <input className=\"App--form-input\" disabled={this.props.is_processing} maxLength=\"25\" name=\"first_name\" type=\"text\" value={ this.state.first_name } onChange={ this.handleChange }></input>\n          </div>\n          <div className=\"mb-1\">\n            <label className=\"App--form-label\">Last Name</label>\n            <input className=\"App--form-input\" disabled={this.props.is_processing} maxLength=\"25\" name=\"last_name\" type=\"text\" value={ this.state.last_name } onChange={ this.handleChange }></input>\n          </div>\n          <div className=\"mb-1\">\n            <label className=\"App--form-label\">Photo URL</label>\n            <input className=\"App--form-input\" disabled={this.props.is_processing} name=\"photo\" type=\"text\" value={ this.state.photo } onChange={ this.handleChange }></input>\n          </div>\n          <div className=\"mb-1\">\n            <label className=\"App--form-label\">Your Age</label>\n            <select className=\"App--form-input\" disabled={this.props.is_processing} name=\"age\" value={ this.state.age } onChange={ this.handleChange }>\n              { \n                ages.map((num) => {\n                  return (<option value={num} key={'age-' + num}>{num}</option>)\n                })\n              }\n            </select>\n          </div>\n          <div>\n            <button disabled={this.disableButton()} onClick={this.props.handler.bind(this, this.state)} type=\"button\">Save</button>\n            <button disabled={this.props.is_processing} onClick={this.props.toggle} type=\"button\">Cancel</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    if (!this.props.item) return;\n\n    this.setState({\n      id: this.props.item.id,\n      first_name: this.props.item.firstName,\n      last_name: this.props.item.lastName,\n      age: this.props.item.age,\n      photo: this.props.item.photo,\n    })\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      is_loading: true,\n      is_saving: false,\n      show_create_form: false,\n      show_update_form: false,\n      update_form_item: null,\n      url: 'https://simple-contact-crud.herokuapp.com',\n    }\n\n    this.handleRemove = this.handleRemove.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.toggleUpdateForm = this.toggleUpdateForm.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  handleRemove(item) {\n    const items = this.state.contacts.filter((ob) => {\n      return ob !== item;\n    });\n    this.setState({contacts: items});\n\n    // 2018-10-17 19:59:00+07:00\n    // this will return error 400\n    // {message: \"contact unavailable\"}\n    // same result when testing at https://simple-contact-crud.herokuapp.com/documentation#!/contact/deleteContactId\n    fetch(this.state.url + '/contact/' + item.id, {\n        method: 'DELETE',\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then(res => res.json())\n      .then(result => console.log(result))\n      .catch(error => console.log(error));\n  }\n\n  handleSave(data) {\n    let args = {\n      firstName: data.first_name,\n      lastName: data.last_name,\n      age: data.age,\n      photo: data.photo\n    };\n    \n    this.setState({is_saving: true});\n    \n    fetch(this.state.url + '/contact', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n      body: JSON.stringify(args)\n    })\n    .then(res => res.json())\n    .then((result) => {\n      // fetch from sever to get new data\n      fetch(this.state.url + '/contact')\n        .then(res => res.json())\n        .then((result) => {\n\n          this.setState({\n            contacts: result.data,\n            is_saving: false,\n            show_create_form: false,\n          })\n        })\n        .catch(error => console.log(error))\n    })\n    .catch(error => console.log(error));\n\n  }\n\n  handleUpdate(data) {\n    fetch(this.state.url + '/contact/' + data.id,{\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n        },\n        body: JSON.stringify({\n          firstName: data.first_name,\n          lastName: data.last_name,\n          age: data.age,\n          photo: data.photo,\n        })\n      })\n      .then(res => res.json())\n      .then((result) => {\n        let items = this.state.contacts;\n        let index = items.findIndex(ob => ob.id === data.id);\n\n        items[index].firstName = data.first_name;\n        items[index].lastName = data.last_name;\n        items[index].age = data.age;\n        items[index].photo = data.photo;\n\n        this.setState({\n          contacts: items,\n          show_update_form: false,\n          update_form_item: null\n        })\n      })\n      .catch(error => console.log(error));\n  }\n\n  toggleForm() {\n    this.setState({\n      show_create_form: !this.state.show_create_form\n    })\n  }\n\n  toggleUpdateForm(item) {\n    this.setState({\n      show_update_form: !this.state.show_update_form,\n      update_form_item: item,\n    })\n  }\n\n  render() {\n    let items;\n\n    if (this.state.is_loading ) {\n      items = (<p>Loading contacts...</p>)\n    } else {\n      items = this.state.contacts.map((item) => {\n        return (<Contact item={item} key={item.id} remove={this.handleRemove} toggle_update={this.toggleUpdateForm} />);\n      });\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"App--profiles\">{ items }</div>\n        <div className=\"bt-1 pa-1\">\n          { this.state.show_create_form ? <Form toggle={this.toggleForm} form_title=\"Add New Contact\" handler={this.handleSave} is_processing={this.state.is_saving} /> : null }\n          { this.state.show_update_form ? <Form toggle={this.toggleUpdateForm} form_title=\"Update A Contact\" handler={this.handleUpdate} is_processing={this.state.is_updating} item={this.state.update_form_item} /> : null }\n          { !this.state.show_create_form ? <button onClick={this.toggleForm} type=\"button\">Create</button> : null }\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    fetch(this.state.url + '/contact')\n      .then(res => res.json())\n      .then((result) => {\n        this.setState({\n          contacts : result.data, \n          is_loading: false\n        })\n      })\n      .catch(error => console.log(error))\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}